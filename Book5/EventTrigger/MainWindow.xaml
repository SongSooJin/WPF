<Window x:Class="EventTrigger.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EventTrigger"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">


    <!--ColorAnimation-->
    <!--<Border Name="border1" Width="100" Height="30" BorderBrush="Black" BorderThickness="1">
        <Border.Background>
            <SolidColorBrush x:Name="MyBorder" Color="LightBlue" />
        </Border.Background>
        <Border.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:1" Storyboard.TargetName="MyBorder"
                                        Storyboard.TargetProperty="Color" To="Gray" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
    </Border>-->



    <!--DoubleAnimation: UIElement의 width/height 값을 변경하기 위해 사용
    아래 예문은 Border의 width는 5초동안 100에서 20까지 애니메이션 된다. 그리고
    AutoReverse 속성 때문에 즉시 20에서 100으로 돌아오게 된다. AutoReverse 속성은
    From  To  From의 형태를 지원하는 속성이다.-->
    <!--<Border Name="EventTriggerBorder" Width="100" Height="30" Background="Olive" BorderBrush="Black" BorderThickness="1">
        <Border.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="1" Storyboard.TargetName="EventTriggerBorder" Storyboard.TargetProperty="(Border.Opacity)" To="0.5" />
                        <DoubleAnimation AutoReverse="True" Duration="0:0:5" From="100" Storyboard.TargetName="EventTriggerBorder" Storyboard.TargetProperty="(Border.Width)" To="20" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
    </Border>-->


 
    <!--DoubleAnimationUsingKeyFrames : UIElement의 width/height 값을 변경하기 위해사용하는 DoubleAnumation과 유사하며 
    추가적으로 KeyFrames 속성이 추가되었으며 두 개 이상의 대상 값을 사용하여 애니메이션을 만들 수 있다.
    아래 예문은 텍스트 박스가 포커스를 얻거나 잃을 때 텍스트박스의 배경색을 간단한 애니메이션으로 구현한 예문 -->
    <Window.Resources>
        <Style x:Key="NameBox" TargetType="TextBox">
            <Setter Property="Background" Value="AntiqueWhite"/>
            <Setter Property="Margin" Value="5 0 5 5"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="GotFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                            To="Gold" Duration="0:0:1" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>                </EventTrigger>
                <EventTrigger RoutedEvent="LostFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                            To="AntiqueWhite" Duration="0:0:1" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0 10 5 0"/>
            <Setter Property="Width" Value="100"/>
        </Style>
    </Window.Resources>
    <StackPanel>
        <Label Content="First Name" />
        <TextBox Style="{StaticResource NameBox}"/>
        <Label Content="Last Name" />
        <TextBox Style="{StaticResource NameBox}"/>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Style="{StaticResource ButtonStyle}">OK</Button>
            <Button Style="{StaticResource ButtonStyle}">Cancel</Button>
        </StackPanel>
    </StackPanel>


</Window>
